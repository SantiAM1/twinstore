services:
  web:
    build: .
    entrypoint: /entrypoint.sh
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: on-failure

  redis:
    image: redis:7
    restart: on-failure

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - web
    restart: on-failure

  db:
    image: postgres:15
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"

  celery:
    build: .
    entrypoint: /entrypoint-celery.sh
    user: "1000:1000"
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    env_file:
      - .env
    restart: on-failure

  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

volumes:
  postgres_data:
  static_volume:
  media_volume: